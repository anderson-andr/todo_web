{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/login.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"../../../../auth.service\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/toolbar\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/input\";\nexport class LoginComponent {\n  constructor(service, formBuilder, snackBar, location, router, route, authService) {\n    this.service = service;\n    this.formBuilder = formBuilder;\n    this.snackBar = snackBar;\n    this.location = location;\n    this.router = router;\n    this.route = route;\n    this.authService = authService;\n    this.errorMessage = '';\n    this.form = this.formBuilder.group({\n      email: [null],\n      password: [null]\n    });\n  }\n  ngOnInit() {}\n  onLogar() {\n    if (!this.form.get('email')?.value || !this.form.get('password')?.value) {\n      window.alert('Todos os dados são obrigátorios');\n    } else {\n      this.authService.login(this.form.get('email')?.value, this.form.get('password')?.value).subscribe(result => {\n        this.onSucess();\n      }, error => {\n        this.errorMessage = error.message;\n        this.onError();\n      });\n    }\n  }\n  onCancel() {\n    this.location.back();\n  }\n  onSucess() {\n    this.snackBar.open('Login realizado com sucesso!', '', {\n      duration: 5000\n    });\n    this.router.navigate(['/usuario'], {\n      relativeTo: this.route\n    });\n  }\n  onError() {\n    this.snackBar.open(this.errorMessage);\n    this.form = this.formBuilder.group({\n      email: [null],\n      password: [null]\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Location), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i6.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 16,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"title\"], [1, \"min-width\", 3, \"formGroup\"], [1, \"full-width\"], [\"type\", \"email\", \"name\", \"email\", \"matInput\", \"\", \"placeholder\", \"Ex. pat@example.com\", \"formControlName\", \"email\", \"required\", \"\"], [\"appearance\", \"fill\", 1, \"full-width\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"acoes\", 3, \"click\"], [\"mat-raised-button\", \"\", 1, \"acoes\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-toolbar\", 1);\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"mat-card-content\")(4, \"form\", 2)(5, \"mat-form-field\", 3)(6, \"mat-label\");\n      i0.ɵɵtext(7, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-form-field\", 5);\n      i0.ɵɵelement(10, \"input\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"mat-card-actions\")(12, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_12_listener() {\n        return ctx.onLogar();\n      });\n      i0.ɵɵtext(13, \"Entra\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_14_listener() {\n        return ctx.onCancel();\n      });\n      i0.ɵɵtext(15, \"Recuperar senha\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i7.MatCard, i7.MatCardActions, i7.MatCardContent, i8.MatToolbar, i9.MatButton, i10.MatFormField, i10.MatLabel, i11.MatInput, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  width: 60%;\\n  margin: 50px auto;\\n  display: flex;\\n  text-align: center;\\n  justify-items: center;\\n  justify-content: center;\\n  border-radius: 50px;\\n  background-color: white;\\n}\\n\\nmat-toolbar.title[_ngcontent-%COMP%] {\\n  display: inline-flex;\\n  justify-content: center;\\n  align-items: center;\\n  border-radius: 25px;\\n  width: 90%;\\n  margin: 0 auto;\\n  font-size: 24px;\\n  font-weight: bold;\\n  background-color: #f2f2f2;\\n}\\n\\nform.min-width[_ngcontent-%COMP%] {\\n  display: block;\\n  margin: 25px auto;\\n}\\n\\n.full-width[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 90%;\\n  margin: 0 auto;\\n}\\n\\nmat-card-actions[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 80;\\n  text-align: center;\\n  justify-content: center;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  margin: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsVUFBQTtFQUNBLGlCQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0EscUJBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7QUFDRjs7QUFFQTtFQUNJLG9CQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0VBQ0EsVUFBQTtFQUNBLGNBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSx5QkFBQTtBQUNKOztBQUlBO0VBQ0UsY0FBQTtFQUNBLGlCQUFBO0FBREY7O0FBS0E7RUFDRSxhQUFBO0VBQ0EsVUFBQTtFQUNBLGNBQUE7QUFGRjs7QUFNQTtFQUNFLGFBQUE7RUFDQSxTQUFBO0VBQ0Esa0JBQUE7RUFDQSx1QkFBQTtBQUhGOztBQU9BO0VBQ0UsV0FBQTtBQUpGIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiAgcGFkZGluZzogMjBweDtcclxuICB3aWR0aDogNjAlO1xyXG4gIG1hcmdpbjogNTBweCBhdXRvO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBib3JkZXItcmFkaXVzOiA1MHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG5tYXQtdG9vbGJhci50aXRsZSB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDI1cHg7XHJcbiAgICB3aWR0aDogOTAlO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XHJcblxyXG5cclxufVxyXG5cclxuZm9ybS5taW4td2lkdGgge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbjogMjVweCBhdXRvO1xyXG5cclxufVxyXG5cclxuLmZ1bGwtd2lkdGgge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgd2lkdGg6IDkwJTtcclxuICBtYXJnaW46IDAgYXV0bztcclxuXHJcbn1cclxuXHJcbm1hdC1jYXJkLWFjdGlvbnMge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgd2lkdGg6IDgwO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgbWFyZ2luIDo1cHg7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;;;;;AAcA,OAAM,MAAOA,cAAc;EAGzBC,YACUC,OAAqB,EACrBC,WAAwB,EACxBC,QAAqB,EACrBC,QAAkB,EAClBC,MAAc,EACdC,KAAqB,EACrBC,WAAwB;IANxB,YAAO,GAAPN,OAAO;IACP,gBAAW,GAAXC,WAAW;IACX,aAAQ,GAARC,QAAQ;IACR,aAAQ,GAARC,QAAQ;IACR,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IACL,gBAAW,GAAXC,WAAW;IARrB,iBAAY,GAAG,EAAE;IAUf,IAAI,CAACC,IAAI,GAAG,IAAI,CAACN,WAAW,CAACO,KAAK,CAAC;MACjCC,KAAK,EAAE,CAAC,IAAI,CAAC;MACbC,QAAQ,EAAE,CAAC,IAAI;KAChB,CAAC;EACJ;EAEAC,QAAQ,IAAU;EAElBC,OAAO;IACL,IACE,CAAC,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK,IAC9B,CAAC,IAAI,CAACP,IAAI,CAACM,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK,EACjC;MACAC,MAAM,CAACC,KAAK,CAAC,iCAAiC,CAAC;KAChD,MAAM;MACL,IAAI,CAACV,WAAW,CACbW,KAAK,CAAC,IAAI,CAACV,IAAI,CAACM,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK,EAAE,IAAI,CAACP,IAAI,CAACM,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK,CAAC,CACtEI,SAAS,CACPC,MAAM,IAAI;QACT,IAAI,CAACC,QAAQ,EAAE;MACjB,CAAC,EACAC,KAAK,IAAI;QACR,IAAI,CAACC,YAAY,GAAGD,KAAK,CAACE,OAAO;QACnC,IAAI,CAACC,OAAO,EAAE;MAEhB,CAAC,CACA;;EAEP;EACAC,QAAQ;IACN,IAAI,CAACtB,QAAQ,CAACuB,IAAI,EAAE;EACtB;EAEQN,QAAQ;IACd,IAAI,CAAClB,QAAQ,CAACyB,IAAI,CAAC,8BAA8B,EAAE,EAAE,EAAE;MACrDC,QAAQ,EAAE;KACX,CAAC;IACF,IAAI,CAACxB,MAAM,CAACyB,QAAQ,CAAC,CAAC,UAAU,CAAC,EAAE;MAAEC,UAAU,EAAE,IAAI,CAACzB;IAAK,CAAE,CAAC;EAChE;EACQmB,OAAO;IACb,IAAI,CAACtB,QAAQ,CAACyB,IAAI,CAAC,IAAI,CAACL,YAAY,CAAC;IAErC,IAAI,CAACf,IAAI,GAAG,IAAI,CAACN,WAAW,CAACO,KAAK,CAAC;MACjCC,KAAK,EAAE,CAAC,IAAI,CAAC;MACbC,QAAQ,EAAE,CAAC,IAAI;KAChB,CAAC;EACJ;;AA1DWZ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAiC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCd3BC,mCAA4B;MACEA,qBAAK;MAAAA,iBAAc;MAC/CA,wCAAkB;MAGDA,qBAAK;MAAAA,iBAAY;MAC5BA,2BAAiH;MACnHA,iBAAiB;MACjBA,yCAAqD;MACnDA,4BAA+F;MACjGA,iBAAiB;MAEnBA,yCAAmB;MAEsDA;QAAA,OAASC,aAAS;MAAA,EAAC;MAACD,sBAAK;MAAAA,iBAAS;MACzGA,kCAAgE;MAAtBA;QAAA,OAASC,cAAU;MAAA,EAAC;MAAED,gCAAe;MAAAA,iBAAS;;;MAZnFA,eAAkB;MAAlBA,oCAAkB","names":["LoginComponent","constructor","service","formBuilder","snackBar","location","router","route","authService","form","group","email","password","ngOnInit","onLogar","get","value","window","alert","login","subscribe","result","onSucess","error","errorMessage","message","onError","onCancel","back","open","duration","navigate","relativeTo","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\ander\\Documents\\Projetos\\TodoApp\\front-end\\src\\app\\login\\login\\login.component.ts","C:\\Users\\ander\\Documents\\Projetos\\TodoApp\\front-end\\src\\app\\login\\login\\login.component.html"],"sourcesContent":["import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthService } from '../../../../auth.service';\nimport { LoginService } from '../services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  form: FormGroup;\n  errorMessage = '';\n  constructor(\n    private service: LoginService,\n    private formBuilder: FormBuilder,\n    private snackBar: MatSnackBar,\n    private location: Location,\n    private router: Router,\n    private route: ActivatedRoute,\n    private authService: AuthService\n  ) {\n    this.form = this.formBuilder.group({\n      email: [null],\n      password: [null],\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onLogar() {\n    if (\n      !this.form.get('email')?.value  ||\n      !this.form.get('password')?.value\n    ) {\n      window.alert('Todos os dados são obrigátorios');\n    } else {\n      this.authService\n        .login(this.form.get('email')?.value, this.form.get('password')?.value)\n        .subscribe(\n          (result) => {\n            this.onSucess();\n          },\n          (error) =>  {\n            this.errorMessage = error.message;\n          this.onError()\n\n        }\n        );\n    }\n  }\n  onCancel() {\n    this.location.back();\n  }\n\n  private onSucess() {\n    this.snackBar.open('Login realizado com sucesso!', '', {\n      duration: 5000,\n    });\n    this.router.navigate(['/usuario'], { relativeTo: this.route });\n  }\n  private onError() {\n    this.snackBar.open(this.errorMessage);\n\n    this.form = this.formBuilder.group({\n      email: [null],\n      password: [null],\n    });\n  }\n}\n","<mat-card class=\"container\">\n  <mat-toolbar  class=\"title\">Login</mat-toolbar>\n  <mat-card-content>\n    <form  [formGroup]=\"form\" class=\"min-width\" >\n      <mat-form-field class=\"full-width\">\n        <mat-label>Email</mat-label>\n        <input type=\"email\"  name=\"email\"  matInput placeholder=\"Ex. pat@example.com\" formControlName=\"email\"  required >\n      </mat-form-field>\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\n        <input  type=\"password\"   matInput placeholder=\"password\" formControlName=\"password\"  required>\n      </mat-form-field>\n    </form>\n    <mat-card-actions >\n\n      <button  type=\"submit\" class=\"acoes\" mat-raised-button color=\"primary\" (click)=\"onLogar()\">Entra</button>\n      <button  class=\"acoes\" mat-raised-button  (click)=\"onCancel()\" >Recuperar senha</button>\n  </mat-card-actions>\n  </mat-card-content>\n\n</mat-card>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}