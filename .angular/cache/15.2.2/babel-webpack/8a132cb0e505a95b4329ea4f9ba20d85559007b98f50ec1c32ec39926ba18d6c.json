{"ast":null,"code":"import { DatePipe } from '@angular/common';\nconst date = new Date();\nconst formattedDate = new DatePipe('en-US').transform(date, 'dd/MM/yyyy');\nexport class ProjetoFormComponent {\n  constructor(formBuilder, service, snackBar, location, route, authService) {\n    this.formBuilder = formBuilder;\n    this.service = service;\n    this.snackBar = snackBar;\n    this.location = location;\n    this.route = route;\n    this.authService = authService;\n    this.form = this.formBuilder.group({\n      id: [null],\n      name: [null],\n      description: [null],\n      id_User: this.authService.Usuario,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    });\n  }\n  ngOnInit() {\n    const projeto = this.route.snapshot.data['projeto'];\n    const createdAt = new DatePipe('en-US').transform(projeto[0].createdAt, 'dd/MM/yyyy HH:mm:ss');\n    const updatedAt = new DatePipe('en-US').transform(projeto[0].updatedAt, 'dd/MM/yyyy HH:mm:ss');\n    this.form.setValue({\n      id: projeto[0].id,\n      name: projeto[0].name,\n      description: projeto[0].description,\n      id_User: this.authService.Usuario,\n      createdAt: createdAt,\n      updatedAt: updatedAt\n    });\n    console.log('ID do projeto:', projeto[0].id);\n  }\n  onSubmit() {\n    this.service.save(this.form.value).subscribe(result => this.onSucess(), error => this.onError());\n  }\n  onCancel() {\n    this.location.back();\n  }\n  onSucess() {\n    this.snackBar.open('Serviço salvo com sucesso!', '', {\n      duration: 5000\n    });\n    this.onCancel();\n  }\n  onError() {\n    this.snackBar.open('Erro ao salvar serviço', '', {\n      duration: 5000\n    });\n  }\n}","map":{"version":3,"mappings":"AASA,SAASA,QAAQ,QAAQ,iBAAiB;AAQ1C,MAAMC,IAAI,GAAG,IAAIC,IAAI,EAAE;AACvB,MAAMC,aAAa,GAAG,IAAIH,QAAQ,CAAC,OAAO,CAAC,CAACI,SAAS,CAACH,IAAI,EAAE,YAAY,CAAC;AACzE,OAAM,MAAOI,oBAAoB;EAG/BC,YAAqBC,WAAwB,EACnCC,OAAuB,EACvBC,QAAqB,EACrBC,QAAiB,EACjBC,KAAqB,EACrBC,WAAyB;IALd,gBAAW,GAAXL,WAAW;IACtB,YAAO,GAAPC,OAAO;IACP,aAAQ,GAARC,QAAQ;IACR,aAAQ,GAARC,QAAQ;IACR,UAAK,GAALC,KAAK;IACL,gBAAW,GAAXC,WAAW;IAEjB,IAAI,CAACC,IAAI,GAAG,IAAI,CAACN,WAAW,CAACO,KAAK,CAAE;MAChCC,EAAE,EAAC,CAAC,IAAI,CAAC;MACTC,IAAI,EAAC,CAAC,IAAI,CAAC;MACXC,WAAW,EAAC,CAAC,IAAI,CAAC;MAClBC,OAAO,EAAC,IAAI,CAACN,WAAW,CAACO,OAAO;MAChCC,SAAS,EAAC,IAAIlB,IAAI,EAAE;MACpBmB,SAAS,EAAC,IAAInB,IAAI;KAErB,CAAC;EAEN;EAEAoB,QAAQ;IACN,MAAMC,OAAO,GAAe,IAAI,CAACZ,KAAK,CAACa,QAAQ,CAACC,IAAI,CAAC,SAAS,CAAC;IAC/D,MAAML,SAAS,GAAG,IAAIpB,QAAQ,CAAC,OAAO,CAAC,CAACI,SAAS,CAACmB,OAAO,CAAC,CAAC,CAAC,CAACH,SAAS,EAAE,qBAAqB,CAAC;IAC9F,MAAMC,SAAS,GAAG,IAAIrB,QAAQ,CAAC,OAAO,CAAC,CAACI,SAAS,CAACmB,OAAO,CAAC,CAAC,CAAC,CAACF,SAAS,EAAE,qBAAqB,CAAC;IAC9F,IAAI,CAACR,IAAI,CAACa,QAAQ,CAAE;MAClBX,EAAE,EAACQ,OAAO,CAAC,CAAC,CAAC,CAACR,EAAE;MAChBC,IAAI,EAACO,OAAO,CAAC,CAAC,CAAC,CAACP,IAAI;MACpBC,WAAW,EAACM,OAAO,CAAC,CAAC,CAAC,CAACN,WAAW;MAElCC,OAAO,EAAC,IAAI,CAACN,WAAW,CAACO,OAAO;MAChCC,SAAS,EAACA,SAAS;MACnBC,SAAS,EAACA;KACX,CAAC;IACAM,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEL,OAAO,CAAC,CAAC,CAAC,CAACR,EAAE,CAAC;EAChD;EAEAc,QAAQ;IACN,IAAI,CAACrB,OAAO,CAACsB,IAAI,CAAC,IAAI,CAACjB,IAAI,CAACkB,KAAK,CAAC,CACjCC,SAAS,CAAEC,MAAM,IAAI,IAAI,CAACC,QAAQ,EAAE,EAAEC,KAAK,IAAI,IAAI,CAACC,OAAO,EAAE,CAAC;EAGlE;EACAC,QAAQ;IACP,IAAI,CAAC3B,QAAQ,CAAC4B,IAAI,EAAE;EAGrB;EAEQJ,QAAQ;IACf,IAAI,CAACzB,QAAQ,CAAC8B,IAAI,CAAC,4BAA4B,EAAC,EAAE,EAAC;MAACC,QAAQ,EAAC;IAAI,CAAC,CAAC;IACnE,IAAI,CAACH,QAAQ,EAAE;EAChB;EACQD,OAAO;IACd,IAAI,CAAC3B,QAAQ,CAAC8B,IAAI,CAAC,wBAAwB,EAAC,EAAE,EAAC;MAACC,QAAQ,EAAC;IAAI,CAAC,CAAC;EAChE","names":["DatePipe","date","Date","formattedDate","transform","ProjetoFormComponent","constructor","formBuilder","service","snackBar","location","route","authService","form","group","id","name","description","id_User","Usuario","createdAt","updatedAt","ngOnInit","projeto","snapshot","data","setValue","console","log","onSubmit","save","value","subscribe","result","onSucess","error","onError","onCancel","back","open","duration"],"sourceRoot":"","sources":["C:\\Users\\ander\\Documents\\Projetos\\TodoApp\\front-end\\src\\app\\project\\projeto-form\\projeto-form.component.ts"],"sourcesContent":["import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'auth.service';\n\nimport { Project } from '../model/project';\nimport { ProjectService } from '../services/project.service';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-projeto-form',\n  templateUrl: './projeto-form.component.html',\n  styleUrls: ['./projeto-form.component.scss']\n})\n\nconst date = new Date();\nconst formattedDate = new DatePipe('en-US').transform(date, 'dd/MM/yyyy');\nexport class ProjetoFormComponent implements OnInit {\n  form: FormGroup;\n\n  constructor( private formBuilder: FormBuilder,\n    private service: ProjectService,\n    private snackBar: MatSnackBar,\n    private location:Location,\n    private route :ActivatedRoute,\n    private authService : AuthService\n    ) {\n      this.form = this.formBuilder.group( {\n          id:[null],\n          name:[null],\n          description:[null],\n          id_User:this.authService.Usuario,\n          createdAt:new Date(),\n          updatedAt:new Date(),\n\n      });\n\n  }\n\n  ngOnInit()  {\n    const projeto: Project[]  = this.route.snapshot.data['projeto'];\n    const createdAt = new DatePipe('en-US').transform(projeto[0].createdAt, 'dd/MM/yyyy HH:mm:ss');\n    const updatedAt = new DatePipe('en-US').transform(projeto[0].updatedAt, 'dd/MM/yyyy HH:mm:ss');\n    this.form.setValue ({\n      id:projeto[0].id,\n      name:projeto[0].name,\n      description:projeto[0].description,\n\n      id_User:this.authService.Usuario,\n      createdAt:createdAt,\n      updatedAt:updatedAt,\n    })\n      console.log('ID do projeto:', projeto[0].id)\n  }\n\n  onSubmit (){\n    this.service.save(this.form.value)\n    .subscribe( result => this.onSucess(), error => this.onError());\n\n\n }\n onCancel() {\n  this.location.back();\n\n\n }\n\n private onSucess(){\n  this.snackBar.open('Serviço salvo com sucesso!','',{duration:5000});\n  this.onCancel();\n }\n private onError () {\n  this.snackBar.open('Erro ao salvar serviço','',{duration:5000});\n }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}