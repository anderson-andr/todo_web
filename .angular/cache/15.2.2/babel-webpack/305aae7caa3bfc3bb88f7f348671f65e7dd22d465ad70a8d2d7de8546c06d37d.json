{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/project.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"auth.service\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/toolbar\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/input\";\nexport class ProjetoFormComponent {\n  constructor(formBuilder, service, snackBar, location, route, authService) {\n    this.formBuilder = formBuilder;\n    this.service = service;\n    this.snackBar = snackBar;\n    this.location = location;\n    this.route = route;\n    this.authService = authService;\n    this.form = this.formBuilder.group({\n      id: [null]\n    });\n  }\n  ngOnInit() {\n    const projeto = this.route.snapshot.data['projeto'];\n    this.form = new FormGroup({\n      id: new FormControl(projeto.id, Validators.required)\n    });\n  }\n  onSubmit() {\n    this.service.save(this.form.value).subscribe(result => this.onSucess(), error => this.onError());\n  }\n  onCancel() {\n    this.location.back();\n  }\n  onSucess() {\n    this.snackBar.open('Serviço salvo com sucesso!', '', {\n      duration: 5000\n    });\n    this.onCancel();\n  }\n  onError() {\n    this.snackBar.open('Erro ao salvar serviço', '', {\n      duration: 5000\n    });\n  }\n}\nProjetoFormComponent.ɵfac = function ProjetoFormComponent_Factory(t) {\n  return new (t || ProjetoFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProjectService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Location), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i6.AuthService));\n};\nProjetoFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProjetoFormComponent,\n  selectors: [[\"app-projeto-form\"]],\n  decls: 12,\n  vars: 1,\n  consts: [[1, \"min-width\", 3, \"formGroup\"], [1, \"full-width\"], [\"matInput\", \"\", \"placeholder\", \"Nome\", \"formControlName\", \"id\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-raised-button\", \"\", 3, \"click\"]],\n  template: function ProjetoFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-toolbar\");\n      i0.ɵɵtext(2, \"Detalhes do Usuario\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"mat-card-content\")(4, \"form\", 0)(5, \"mat-form-field\", 1);\n      i0.ɵɵelement(6, \"input\", 2);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(7, \"mat-card-actions\")(8, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function ProjetoFormComponent_Template_button_click_8_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(9, \"Salvar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function ProjetoFormComponent_Template_button_click_10_listener() {\n        return ctx.onCancel();\n      });\n      i0.ɵɵtext(11, \"Cancelar\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i7.MatCard, i7.MatCardActions, i7.MatCardContent, i8.MatToolbar, i9.MatButton, i10.MatFormField, i11.MatInput, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAsBA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;;;;;;;;;AAchF,OAAM,MAAOC,oBAAoB;EAG/BC,YAAqBC,WAAwB,EACnCC,OAAuB,EACvBC,QAAqB,EACrBC,QAAiB,EACjBC,KAAqB,EACrBC,WAAyB;IALd,gBAAW,GAAXL,WAAW;IACtB,YAAO,GAAPC,OAAO;IACP,aAAQ,GAARC,QAAQ;IACR,aAAQ,GAARC,QAAQ;IACR,UAAK,GAALC,KAAK;IACL,gBAAW,GAAXC,WAAW;IACjB,IAAI,CAACC,IAAI,GAAG,IAAI,CAACN,WAAW,CAACO,KAAK,CAAE;MAChCC,EAAE,EAAC,CAAC,IAAI;KAGX,CAAC;EAEN;EAEAC,QAAQ;IACN,MAAMC,OAAO,GAAW,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACC,IAAI,CAAC,SAAS,CAAC;IAC3D,IAAI,CAACN,IAAI,GAAG,IAAIV,SAAS,CAAC;MACxBY,EAAE,EAAE,IAAIb,WAAW,CAACe,OAAO,CAACF,EAAE,EAAEX,UAAU,CAACgB,QAAQ;KAEpD,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAACb,OAAO,CAACc,IAAI,CAAC,IAAI,CAACT,IAAI,CAACU,KAAK,CAAC,CACjCC,SAAS,CAAEC,MAAM,IAAI,IAAI,CAACC,QAAQ,EAAE,EAAEC,KAAK,IAAI,IAAI,CAACC,OAAO,EAAE,CAAC;EAGlE;EACAC,QAAQ;IACP,IAAI,CAACnB,QAAQ,CAACoB,IAAI,EAAE;EAGrB;EAEQJ,QAAQ;IACf,IAAI,CAACjB,QAAQ,CAACsB,IAAI,CAAC,4BAA4B,EAAC,EAAE,EAAC;MAACC,QAAQ,EAAC;IAAI,CAAC,CAAC;IACnE,IAAI,CAACH,QAAQ,EAAE;EAChB;EACQD,OAAO;IACd,IAAI,CAACnB,QAAQ,CAACsB,IAAI,CAAC,wBAAwB,EAAC,EAAE,EAAC;MAACC,QAAQ,EAAC;IAAI,CAAC,CAAC;EAChE;;AA3CY3B,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAA4B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCfjCC,gCAAU;MACMA,mCAAmB;MAAAA,iBAAc;MAC/CA,wCAAkB;MAGZA,2BAAwD;MAC1DA,iBAAiB;MAIrBA,wCAAkB;MAC0BA;QAAA,OAASC,cAAU;MAAA,EAAC;MAACD,sBAAM;MAAAA,iBAAS;MAC9EA,kCAA+C;MAArBA;QAAA,OAASC,cAAU;MAAA,EAAC;MAACD,yBAAQ;MAAAA,iBAAS;;;MAT1DA,eAAkB;MAAlBA,oCAAkB","names":["FormControl","FormGroup","Validators","ProjetoFormComponent","constructor","formBuilder","service","snackBar","location","route","authService","form","group","id","ngOnInit","projeto","snapshot","data","required","onSubmit","save","value","subscribe","result","onSucess","error","onError","onCancel","back","open","duration","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\ander\\Documents\\Projetos\\TodoApp\\front-end\\src\\app\\project\\projeto-form\\projeto-form.component.ts","C:\\Users\\ander\\Documents\\Projetos\\TodoApp\\front-end\\src\\app\\project\\projeto-form\\projeto-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'auth.service';\nimport { Project } from '../model/project';\nimport { ProjectService } from '../services/project.service';\nimport { Location } from '@angular/common';\n\n\n@Component({\n  selector: 'app-projeto-form',\n  templateUrl: './projeto-form.component.html',\n  styleUrls: ['./projeto-form.component.scss']\n})\nexport class ProjetoFormComponent implements OnInit {\n  form: FormGroup;\n\n  constructor( private formBuilder: FormBuilder,\n    private service: ProjectService,\n    private snackBar: MatSnackBar,\n    private location:Location,\n    private route :ActivatedRoute,\n    private authService : AuthService) {\n      this.form = this.formBuilder.group( {\n          id:[null],\n\n\n      });\n\n  }\n\n  ngOnInit(): void {\n    const projeto:Project = this.route.snapshot.data['projeto'];\n    this.form = new FormGroup({\n      id: new FormControl(projeto.id, Validators.required),\n\n    });\n  }\n\n  onSubmit (){\n    this.service.save(this.form.value)\n    .subscribe( result => this.onSucess(), error => this.onError());\n\n\n }\n onCancel() {\n  this.location.back();\n\n\n }\n\n private onSucess(){\n  this.snackBar.open('Serviço salvo com sucesso!','',{duration:5000});\n  this.onCancel();\n }\n private onError () {\n  this.snackBar.open('Erro ao salvar serviço','',{duration:5000});\n }\n\n\n}\n","<mat-card>\n  <mat-toolbar >Detalhes do Usuario</mat-toolbar>\n  <mat-card-content>\n    <form [formGroup]=\"form\" class=\"min-width\">\n      <mat-form-field class=\"full-width\">\n        <input matInput placeholder=\"Nome\" formControlName=\"id\">\n      </mat-form-field>\n    </form>\n  </mat-card-content>\n\n  <mat-card-actions>\n    <button mat-raised-button color=\"primary\" (click)=\"onSubmit()\">Salvar</button>\n    <button mat-raised-button (click)=\"onCancel()\">Cancelar</button>\n  </mat-card-actions>\n</mat-card>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}