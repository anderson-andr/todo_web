{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nlet ProjetoResolver = class ProjetoResolver {\n  constructor(service) {\n    this.service = service;\n  }\n  resolve(route, state) {\n    if (route.params && route.params['id']) {\n      return this.service.loadById(route.params['id']);\n    }\n    return of({\n      id: 0,\n      name: '',\n      description: '',\n      id_User: 0,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    });\n  }\n};\nProjetoResolver = __decorate([Injectable({\n  providedIn: 'root'\n})], ProjetoResolver);\nexport { ProjetoResolver };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAM1C,SAAqBC,EAAE,QAAQ,MAAM;AAM9B,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAC1BC,YAAqBC,OAAe;IAAf,YAAO,GAAPA,OAAO;EAAW;EACvCC,OAAO,CAACC,KAA6B,EAAEC,KAA0B;IAC/D,IAAGD,KAAK,CAACE,MAAM,IAAIF,KAAK,CAACE,MAAM,CAAC,IAAI,CAAC,EAAE;MACrC,OAAO,IAAI,CAACJ,OAAO,CAACK,QAAQ,CAACH,KAAK,CAACE,MAAM,CAAC,IAAI,CAAC,CAAC;;IAElD,OAAOP,EAAE,CAAC;MAAES,EAAE,EAAC,CAAC;MAAEC,IAAI,EAAC,EAAE;MAAEC,WAAW,EAAC,EAAE;MAACC,OAAO,EAAC,CAAC;MAACC,SAAS,EAAE,IAAIC,IAAI,EAAE;MAAEC,SAAS,EAAC,IAAID,IAAI;IAAE,CAAE,CAAC;EACpG;CACD;AARYb,eAAe,eAH3BF,UAAU,CAAC;EACViB,UAAU,EAAE;CACb,CAAC,GACWf,eAAe,CAQ3B;SARYA,eAAe","names":["Injectable","of","ProjetoResolver","constructor","service","resolve","route","state","params","loadById","id","name","description","id_User","createdAt","Date","updatedAt","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ander\\Documents\\Projetos\\TodoApp\\front-end\\src\\app\\project\\guards\\projeto.resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Router, Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Project } from '../model/project';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjetoResolver implements Resolve<Project> {\n  constructor (private service: projec) {}\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Project> {\n    if(route.params && route.params['id']) {\n      return this.service.loadById(route.params['id']);\n    }\n    return of({ id:0, name:'', description:'',id_User:0,createdAt: new Date(), updatedAt:new Date() });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}