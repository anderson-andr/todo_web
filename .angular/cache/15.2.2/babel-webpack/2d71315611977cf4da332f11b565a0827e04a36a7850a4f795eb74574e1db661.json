{"ast":null,"code":"import { first, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../../../auth.service\";\nexport class UsuarioService {\n  constructor(httpClient, authservice) {\n    this.httpClient = httpClient;\n    this.authservice = authservice;\n    this.API = 'http://localhost:3000/api/use';\n  }\n  list() {\n    return this.httpClient.get(this.API + '?id=' + this.authservice.Usuario).pipe(first(), tap(Usuario => {\n      console.log(Usuario);\n    }));\n  }\n}\nUsuarioService.ɵfac = function UsuarioService_Factory(t) {\n  return new (t || UsuarioService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n};\nUsuarioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsuarioService,\n  factory: UsuarioService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,KAAK,EAAoBC,GAAG,QAAS,MAAM;;;;AAMpD,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,UAAsB,EAClCC,WAAuB;IADX,eAAU,GAAVD,UAAU;IACtB,gBAAW,GAAXC,WAAW;IAFF,QAAG,GAAG,+BAA+B;EAEnB;EAEnCC,IAAI;IACF,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAa,IAAI,CAACC,GAAG,GAAE,MAAM,GAAG,IAAI,CAACH,WAAW,CAACI,OAAO,CAAC,CAClFC,IAAI,CAAEV,KAAK,EAAE,EACZC,GAAG,CAACQ,OAAO,IAAG;MACVE,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IAGtB,CAAC,CAAC,CACL;EAEH;;AAhBWP,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAW,SAAdX,cAAc;EAAAY,YAFb;AAAM","names":["first","tap","UsuarioService","constructor","httpClient","authservice","list","get","API","Usuario","pipe","console","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ander\\Documents\\Projetos\\TodoApp\\front-end\\src\\app\\usuario\\services\\usuario.service.ts"],"sourcesContent":["\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { first, Observable, take, tap  } from 'rxjs';\nimport { Usuario } from '../../usuario/model/usuario';\nimport { AuthService } from'../../../../auth.service';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioService {\n\n  private readonly API = 'http://localhost:3000/api/use';\n  constructor(private httpClient: HttpClient,\n  private authservice:AuthService) { }\n\n  list(){\n    return this.httpClient.get <Usuario[]>(this.API+ '?id=' + this.authservice.Usuario)\n    .pipe (first(),\n      tap(Usuario => {\n          console.log(Usuario)\n\n\n        })\n    );\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}