{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/register.service\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/toolbar\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nfunction RegisterComponent_div_9_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"O email \\u00E9 obrigat\\u00F3rio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_9_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Endere\\u00E7o de email inv\\u00E1lido\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RegisterComponent_div_9_div_1_Template, 2, 0, \"div\", 5);\n    i0.ɵɵtemplate(2, RegisterComponent_div_9_div_2_Template, 2, 0, \"div\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.form.get(\"email\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.form.get(\"email\").errors.email);\n  }\n}\nexport class RegisterComponent {\n  constructor(formBuilder, service, snackBar, location, router, route) {\n    this.formBuilder = formBuilder;\n    this.service = service;\n    this.snackBar = snackBar;\n    this.location = location;\n    this.router = router;\n    this.route = route;\n    this.form = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email])\n    });\n    this.form = this.formBuilder.group({\n      id: [null],\n      name: [null],\n      email: [null],\n      password: [null]\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    if (!this.form.get('name')?.value || !this.form.get('email')?.value || !this.form.get('password')?.value) {\n      window.alert('Por favor, preencha todos os campos obrigatórios para continuar.');\n    } else {\n      this.service.save(this.form.value).subscribe(result => this.onSucess(), error => this.onError());\n    }\n  }\n  onCancel() {\n    this.location.back();\n  }\n  onSucess() {\n    this.snackBar.open('Cadastro realizado com sucesso!', '', {\n      duration: 5000\n    });\n    this.router.navigate(['/login'], {\n      relativeTo: this.route\n    });\n  }\n  onError() {\n    this.snackBar.open('Erro ao salvar usuario', '', {\n      duration: 5000\n    });\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.RegisterService), i0.ɵɵdirectiveInject(i3.MatSnackBar), i0.ɵɵdirectiveInject(i4.Location), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 17,\n  vars: 2,\n  consts: [[1, \"title\"], [1, \"form\", 3, \"formGroup\"], [\"appearance\", \"fill\", 1, \"full-width\"], [\"type\", \"text\", \"matInput\", \"\", \"placeholder\", \"Ex. Lucas\", \"formControlName\", \"name\", \"required\", \"\"], [\"type\", \"email\", \"name\", \"email\", \"matInput\", \"\", \"placeholder\", \"Ex. pat@example.com\", \"formControlName\", \"email\", \"required\", \"\"], [4, \"ngIf\"], [\"type\", \"password\", \"matInput\", \"\", \"placeholder\", \"Senha\", \"formControlName\", \"password\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-raised-button\", \"\", 3, \"click\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-toolbar\", 0);\n      i0.ɵɵtext(2, \"Cadastro\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"mat-card-content\")(4, \"form\", 1)(5, \"mat-form-field\", 2);\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-form-field\", 2);\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵtemplate(9, RegisterComponent_div_9_Template, 3, 2, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"mat-form-field\", 2);\n      i0.ɵɵelement(11, \"input\", 6);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"mat-card-actions\")(13, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_13_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(14, \"Salvar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_15_listener() {\n        return ctx.onCancel();\n      });\n      i0.ɵɵtext(16, \"Cancelar\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"email\").invalid && (ctx.form.get(\"email\").dirty || ctx.form.get(\"email\").touched));\n    }\n  },\n  dependencies: [i4.NgIf, i6.MatCard, i6.MatCardActions, i6.MatCardContent, i7.MatToolbar, i8.MatButton, i9.MatFormField, i10.MatInput, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".mat-card[_ngcontent-%COMP%] {\\n  max-width: 60%;\\n  margin: 1em auto;\\n  text-align: center;\\n  margin-top: 5px;\\n  padding: 0px;\\n  align-items: center;\\n  justify-content: center;\\n  border: none;\\n  box-shadow: none;\\n}\\n\\n.title[_ngcontent-%COMP%] {\\n  display: flex;\\n  width: 100%;\\n  justify-content: center;\\n}\\n\\n.min-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n  min-width: 150px;\\n}\\n\\n.mat-label[_ngcontent-%COMP%] {\\n  color: rgb(218, 212, 212);\\n}\\n\\n.mat-option[_ngcontent-%COMP%] {\\n  color: rgb(184, 183, 183);\\n}\\n\\nmat-card-content[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin: 0 auto;\\n  width: 80%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.form[_ngcontent-%COMP%] {\\n  width: 50%;\\n}\\n\\n.full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n  margin: 0 auto;\\n  margin-top: 5px;\\n  border-radius: 8px;\\n}\\n\\nmat-card-actions[_ngcontent-%COMP%] {\\n  padding: 0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  text-align: center;\\n}\\n\\n.mat-mdc-card[_ngcontent-%COMP%] {\\n  border: none;\\n  box-shadow: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0VBQ0EsbUJBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtBQUNGOztBQUVBO0VBRUMsYUFBQTtFQUNBLFdBQUE7RUFDQSx1QkFBQTtBQUFEOztBQVNBO0VBQ0UsV0FBQTtFQUNBLGdCQUFBO0FBTkY7O0FBU0E7RUFDRSx5QkFBQTtBQU5GOztBQVFBO0VBQ0UseUJBQUE7QUFMRjs7QUFRQTtFQUNFLGFBQUE7RUFDQSxjQUFBO0VBQ0EsVUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0FBTEY7O0FBUUE7RUFDRSxVQUFBO0FBTEY7O0FBT0E7RUFDRSxXQUFBO0VBQ0EsY0FBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtBQUpGOztBQU1BO0VBQ0UsVUFBQTtFQUNBLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0Esa0JBQUE7QUFIRjs7QUFPQTtFQUVFLFlBQUE7RUFDQSxnQkFBQTtBQUxGIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jYXJke1xyXG4gIG1heC13aWR0aDogNjAlO1xyXG4gIG1hcmdpbjogMWVtIGF1dG87XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIG1hcmdpbi10b3A6IDVweDtcclxuICBwYWRkaW5nOiAwcHg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgYm94LXNoYWRvdzogbm9uZTtcclxufVxyXG5cclxuLnRpdGxlXHJcbiB7XHJcbiBkaXNwbGF5OiBmbGV4O1xyXG4gd2lkdGg6IDEwMCU7XHJcbiBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuXHJcbiB9XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbi5taW4td2lkdGgge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1pbi13aWR0aDogMTUwcHg7XHJcbn1cclxuXHJcbi5tYXQtbGFiZWwgIHtcclxuICBjb2xvcjpyZ2IoMjE4LCAyMTIsIDIxMik7XHJcbn1cclxuLm1hdC1vcHRpb24ge1xyXG4gIGNvbG9yOnJnYigxODQsIDE4MywgMTgzKTtcclxufVxyXG5cclxubWF0LWNhcmQtY29udGVudCB7XHJcbiAgcGFkZGluZzoyMHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIHdpZHRoOiA4MCU7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4uZm9ybSB7XHJcbiAgd2lkdGg6IDUwJTtcclxufVxyXG4uZnVsbC13aWR0aCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcbiAgbWFyZ2luLXRvcDogNXB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuIH1cclxubWF0LWNhcmQtYWN0aW9ucyB7XHJcbiAgcGFkZGluZzogMDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxufVxyXG5cclxuLm1hdC1tZGMtY2FyZFxyXG57XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIGJveC1zaGFkb3c6IG5vbmU7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","Validators","i0","RegisterComponent","constructor","formBuilder","service","snackBar","location","router","route","email","FormControl","required","form","group","id","name","password","ngOnInit","onSubmit","get","value","window","alert","save","subscribe","result","onSucess","error","onError","onCancel","back","open","duration","navigate","relativeTo","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\ander\\Documents\\Projetos\\TodoApp\\front-end\\src\\app\\register\\register\\register.component.ts","C:\\Users\\ander\\Documents\\Projetos\\TodoApp\\front-end\\src\\app\\register\\register\\register.component.html"],"sourcesContent":["import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup ,Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { RegisterService } from '../services/register.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n  template: `\n  <form [formGroup]=\"form\">\n    <label for=\"email\">Email:</label>\n    <input id=\"email\" type=\"email\" formControlName=\"email\">\n    <div *ngIf=\"formulario.get('email').invalid && (formulario.get('email').dirty || formulario.get('email').touched)\">\n      <div *ngIf=\"formulario.get('email').errors.required\">O email é obrigatório</div>\n      <div *ngIf=\"formulario.get('email').errors.email\">Endereço de email inválido</div>\n    </div>\n  </form>\n`,\n\n})\nexport class RegisterComponent  implements OnInit{\n\n  form: FormGroup = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email])\n  });\n  constructor( private formBuilder: FormBuilder,\n    private service:RegisterService,\n    private snackBar: MatSnackBar,\n    private location:Location,\n    private router: Router,\n    private route : ActivatedRoute ) {\n      this.form = this.formBuilder.group( {\n          id:[null],\n          name:[null],\n          email:[null],\n          password:[null]\n\n\n      });\n\n  }\n\n  ngOnInit(): void {\n  }\n\n onSubmit (){\n\n  if (\n    !this.form.get('name')?.value  ||\n    !this.form.get('email')?.value  ||\n    !this.form.get('password')?.value\n  ) {\n    window.alert('Por favor, preencha todos os campos obrigatórios para continuar.');\n\n  } else {\n    this.service.save(this.form.value)\n    .subscribe( result => this.onSucess(), error => this.onError()\n\n    );\n\n  }\n\n\n\n }\n onCancel() {\n  this.location.back();\n\n\n }\n\n private onSucess(){\n  this.snackBar.open('Cadastro realizado com sucesso!','',{duration:5000});\n  this.router.navigate(['/login'], {relativeTo:this.route});\n }\n private onError () {\n  this.snackBar.open('Erro ao salvar usuario','',{duration:5000});\n }\n\n\n}\n","<mat-card>\n  <mat-toolbar class=\"title\">Cadastro</mat-toolbar>\n\n  <mat-card-content>\n    <form [formGroup]=\"form\" class=\"form\">\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\n        <input type=\"text\"matInput placeholder=\"Ex. Lucas\" formControlName=\"name\" required>\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\n        <input  type=\"email\"  name=\"email\"  matInput placeholder=\"Ex. pat@example.com\" formControlName=\"email\"  required >\n        <div *ngIf=\"form.get('email').invalid && (form.get('email').dirty || form.get('email').touched)\">\n          <div *ngIf=\"form.get('email').errors.required\">O email é obrigatório</div>\n          <div *ngIf=\"form.get('email').errors.email\">Endereço de email inválido</div>\n        </div>\n      </mat-form-field>\n\n      <mat-form-field class=\"full-width\" appearance=\"fill\">\n        <input type=\"password\" matInput placeholder=\"Senha\" formControlName=\"password\" required>\n      </mat-form-field>\n    </form>\n\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-raised-button (click)=\"onSubmit()\" color=\"primary\">Salvar</button>\n    <button mat-raised-button (click)=\"onCancel()\">Cancelar</button>\n  </mat-card-actions>\n\n</mat-card>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}