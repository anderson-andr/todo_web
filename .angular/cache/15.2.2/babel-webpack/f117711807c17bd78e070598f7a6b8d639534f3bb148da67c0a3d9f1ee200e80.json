{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(formBuilder, service, snackBar, location, router, route) {\n    this.formBuilder = formBuilder;\n    this.service = service;\n    this.snackBar = snackBar;\n    this.location = location;\n    this.router = router;\n    this.route = route;\n    this.form = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email])\n    });\n    this.form = this.formBuilder.group({\n      id: [null],\n      name: [null],\n      email: [null],\n      password: [null]\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    if (!this.form.get('name')?.value || !this.form.get('email')?.value || !this.form.get('password')?.value) {\n      window.alert('Por favor, preencha todos os campos obrigatórios para continuar.');\n    } else {\n      this.service.save(this.form.value).subscribe(result => this.onSucess(), error => this.onError());\n    }\n  }\n  onCancel() {\n    this.location.back();\n  }\n  onSucess() {\n    this.snackBar.open('Cadastro realizado com sucesso!', '', {\n      duration: 5000\n    });\n    this.router.navigate(['/login'], {\n      relativeTo: this.route\n    });\n  }\n  onError() {\n    this.snackBar.open('Erro ao salvar usuario', '', {\n      duration: 5000\n    });\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n  template: `\n  <form [formGroup]=\"form\">\n    <label for=\"email\">Email:</label>\n    <input id=\"email\" type=\"email\" formControlName=\"email\">\n    <div *ngIf=\"formulario.get('email').invalid && (formulario.get('email').dirty || formulario.get('email').touched)\">\n      <div *ngIf=\"formulario.get('email').errors.required\">O email é obrigatório</div>\n      <div *ngIf=\"formulario.get('email').errors.email\">Endereço de email inválido</div>\n    </div>\n  </form>\n`\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,EAAcC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAsBxE,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAK5BC,YAAqBC,WAAwB,EACnCC,OAAuB,EACvBC,QAAqB,EACrBC,QAAiB,EACjBC,MAAc,EACdC,KAAsB;IALX,gBAAW,GAAXL,WAAW;IACtB,YAAO,GAAPC,OAAO;IACP,aAAQ,GAARC,QAAQ;IACR,aAAQ,GAARC,QAAQ;IACR,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IARf,SAAI,GAAc,IAAIT,SAAS,CAAC;MAC9BU,KAAK,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACS,KAAK,CAAC;KACnE,CAAC;IAOE,IAAI,CAACE,IAAI,GAAG,IAAI,CAACR,WAAW,CAACS,KAAK,CAAE;MAChCC,EAAE,EAAC,CAAC,IAAI,CAAC;MACTC,IAAI,EAAC,CAAC,IAAI,CAAC;MACXL,KAAK,EAAC,CAAC,IAAI,CAAC;MACZM,QAAQ,EAAC,CAAC,IAAI;KAGjB,CAAC;EAEN;EAEAC,QAAQ,IACR;EAEDC,QAAQ;IAEP,IACE,CAAC,IAAI,CAACN,IAAI,CAACO,GAAG,CAAC,MAAM,CAAC,EAAEC,KAAK,IAC7B,CAAC,IAAI,CAACR,IAAI,CAACO,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK,IAC9B,CAAC,IAAI,CAACR,IAAI,CAACO,GAAG,CAAC,UAAU,CAAC,EAAEC,KAAK,EACjC;MACAC,MAAM,CAACC,KAAK,CAAC,kEAAkE,CAAC;KAEjF,MAAM;MACL,IAAI,CAACjB,OAAO,CAACkB,IAAI,CAAC,IAAI,CAACX,IAAI,CAACQ,KAAK,CAAC,CACjCI,SAAS,CAAEC,MAAM,IAAI,IAAI,CAACC,QAAQ,EAAE,EAAEC,KAAK,IAAI,IAAI,CAACC,OAAO,EAAE,CAE7D;;EAMJ;EACAC,QAAQ;IACP,IAAI,CAACtB,QAAQ,CAACuB,IAAI,EAAE;EAGrB;EAEQJ,QAAQ;IACf,IAAI,CAACpB,QAAQ,CAACyB,IAAI,CAAC,iCAAiC,EAAC,EAAE,EAAC;MAACC,QAAQ,EAAC;IAAI,CAAC,CAAC;IACxE,IAAI,CAACxB,MAAM,CAACyB,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;MAACC,UAAU,EAAC,IAAI,CAACzB;IAAK,CAAC,CAAC;EAC1D;EACQmB,OAAO;IACd,IAAI,CAACtB,QAAQ,CAACyB,IAAI,CAAC,wBAAwB,EAAC,EAAE,EAAC;MAACC,QAAQ,EAAC;IAAI,CAAC,CAAC;EAChE;CAGA;AA5DY9B,iBAAiB,eAhB7BJ,SAAS,CAAC;EACTqC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B,CAAC;EACxCC,QAAQ,EAAE;;;;;;;;;;CAWX,CAAC,GACWpC,iBAAiB,CA4D7B;SA5DYA,iBAAiB","names":["Component","FormControl","FormGroup","Validators","RegisterComponent","constructor","formBuilder","service","snackBar","location","router","route","email","required","form","group","id","name","password","ngOnInit","onSubmit","get","value","window","alert","save","subscribe","result","onSucess","error","onError","onCancel","back","open","duration","navigate","relativeTo","selector","templateUrl","styleUrls","template"],"sourceRoot":"","sources":["C:\\Users\\ander\\Documents\\Projetos\\TodoApp\\front-end\\src\\app\\register\\register\\register.component.ts"],"sourcesContent":["import { Location } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl,FormBuilder, FormGroup ,Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { RegisterService } from '../services/register.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n  template: `\n  <form [formGroup]=\"form\">\n    <label for=\"email\">Email:</label>\n    <input id=\"email\" type=\"email\" formControlName=\"email\">\n    <div *ngIf=\"formulario.get('email').invalid && (formulario.get('email').dirty || formulario.get('email').touched)\">\n      <div *ngIf=\"formulario.get('email').errors.required\">O email é obrigatório</div>\n      <div *ngIf=\"formulario.get('email').errors.email\">Endereço de email inválido</div>\n    </div>\n  </form>\n`,\n\n})\nexport class RegisterComponent  implements OnInit{\n\n  form: FormGroup = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email])\n  });\n  constructor( private formBuilder: FormBuilder,\n    private service:RegisterService,\n    private snackBar: MatSnackBar,\n    private location:Location,\n    private router: Router,\n    private route : ActivatedRoute ) {\n      this.form = this.formBuilder.group( {\n          id:[null],\n          name:[null],\n          email:[null],\n          password:[null]\n\n\n      });\n\n  }\n\n  ngOnInit(): void {\n  }\n\n onSubmit (){\n\n  if (\n    !this.form.get('name')?.value  ||\n    !this.form.get('email')?.value  ||\n    !this.form.get('password')?.value\n  ) {\n    window.alert('Por favor, preencha todos os campos obrigatórios para continuar.');\n\n  } else {\n    this.service.save(this.form.value)\n    .subscribe( result => this.onSucess(), error => this.onError()\n\n    );\n\n  }\n\n\n\n }\n onCancel() {\n  this.location.back();\n\n\n }\n\n private onSucess(){\n  this.snackBar.open('Cadastro realizado com sucesso!','',{duration:5000});\n  this.router.navigate(['/login'], {relativeTo:this.route});\n }\n private onError () {\n  this.snackBar.open('Erro ao salvar usuario','',{duration:5000});\n }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}