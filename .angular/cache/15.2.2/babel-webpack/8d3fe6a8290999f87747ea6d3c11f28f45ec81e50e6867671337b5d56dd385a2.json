{"ast":null,"code":"import { first, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../../../auth.service\";\nexport class UsuarioService {\n  constructor(httpClient, authservice) {\n    this.httpClient = httpClient;\n    this.authservice = authservice;\n    this.API = 'http://localhost:3000/api/user';\n  }\n  list() {\n    return this.httpClient.get(this.API + '/' + this.authservice.Usuario).pipe(first(), tap(Usuario => {\n      Usuario;\n    }));\n  }\n  save(record) {\n    console.log(record);\n    if (record.id) {\n      console.log('update');\n      return this.update(record);\n    }\n    console.log('create');\n    return this.create(record);\n  }\n  create(record) {\n    return this.httpClient.post(this.API, record).pipe(first());\n  }\n  update(record) {\n    return this.httpClient.put(`${this.API}/${record.id}`, record).pipe(first());\n  }\n  loadById(id) {\n    return this.httpClient.get(`${this.API}/${id}`);\n  }\n  delete(Usuario) {\n    return this.httpClient.delete(this.API + '/' + Usuario.id);\n  }\n}\nUsuarioService.ɵfac = function UsuarioService_Factory(t) {\n  return new (t || UsuarioService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n};\nUsuarioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsuarioService,\n  factory: UsuarioService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,KAAK,EAAoBC,GAAG,QAAQ,MAAM;;;;AAMnD,OAAM,MAAOC,cAAc;EAEzBC,YACUC,UAAsB,EACtBC,WAAwB;IADxB,eAAU,GAAVD,UAAU;IACV,gBAAW,GAAXC,WAAW;IAHJ,QAAG,GAAG,gCAAgC;EAIpD;EAEHC,IAAI;IACF,OAAO,IAAI,CAACF,UAAU,CACnBG,GAAG,CAAY,IAAI,CAACC,GAAG,GAAG,GAAG,GAAG,IAAI,CAACH,WAAW,CAACI,OAAO,CAAC,CACzDC,IAAI,CACHV,KAAK,EAAE,EACPC,GAAG,CAAEQ,OAAO,IAAI;MACdA,OAAO;IACT,CAAC,CAAC,CACH;EACL;EACAE,IAAI,CAACC,MAAwB;IAC3BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB,IAAIA,MAAM,CAACG,EAAE,EAAE;MACbF,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACrB,OAAO,IAAI,CAACE,MAAM,CAACJ,MAAM,CAAC;;IAE5BC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,OAAO,IAAI,CAACG,MAAM,CAACL,MAAM,CAAC;EAC5B;EACQK,MAAM,CAACL,MAAwB;IACrC,OAAO,IAAI,CAACR,UAAU,CAACc,IAAI,CAAU,IAAI,CAACV,GAAG,EAAEI,MAAM,CAAC,CAACF,IAAI,CAACV,KAAK,EAAE,CAAC;EACtE;EACQgB,MAAM,CAACJ,MAAwB;IACrC,OAAO,IAAI,CAACR,UAAU,CACnBe,GAAG,CAAU,GAAG,IAAI,CAACX,GAAG,IAAII,MAAM,CAACG,EAAE,EAAE,EAAEH,MAAM,CAAC,CAChDF,IAAI,CAACV,KAAK,EAAE,CAAC;EAClB;EAEAoB,QAAQ,CAACL,EAAU;IACjB,OAAO,IAAI,CAACX,UAAU,CAACG,GAAG,CAAU,GAAG,IAAI,CAACC,GAAG,IAAIO,EAAE,EAAE,CAAC;EAC1D;EAEAM,MAAM,CAACZ,OAAgB;IACrB,OAAO,IAAI,CAACL,UAAU,CAACiB,MAAM,CAAU,IAAI,CAACb,GAAG,GAAG,GAAG,GAAGC,OAAO,CAACM,EAAE,CAAC;EACrE;;AAzCWb,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAoB,SAAdpB,cAAc;EAAAqB,YAFb;AAAM","names":["first","tap","UsuarioService","constructor","httpClient","authservice","list","get","API","Usuario","pipe","save","record","console","log","id","update","create","post","put","loadById","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ander\\Documents\\Projetos\\TodoApp\\front-end\\src\\app\\usuario\\services\\usuario.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { first, Observable, take, tap } from 'rxjs';\nimport { Usuario } from '../../usuario/model/usuario';\nimport { AuthService } from '../../../../auth.service';\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsuarioService {\n  private readonly API = 'http://localhost:3000/api/user';\n  constructor(\n    private httpClient: HttpClient,\n    private authservice: AuthService\n  ) {}\n\n  list() {\n    return this.httpClient\n      .get<Usuario[]>(this.API + '/' + this.authservice.Usuario)\n      .pipe(\n        first(),\n        tap((Usuario) => {\n          Usuario;\n        })\n      );\n  }\n  save(record: Partial<Usuario>) {\n    console.log(record);\n    if (record.id) {\n      console.log('update');\n      return this.update(record);\n    }\n    console.log('create');\n    return this.create(record);\n  }\n  private create(record: Partial<Usuario>) {\n    return this.httpClient.post<Usuario>(this.API, record).pipe(first());\n  }\n  private update(record: Partial<Usuario>) {\n    return this.httpClient\n      .put<Usuario>(`${this.API}/${record.id}`, record)\n      .pipe(first());\n  }\n\n  loadById(id: string) {\n    return this.httpClient.get<Usuario>(`${this.API}/${id}`);\n  }\n\n  delete(Usuario: Usuario) {\n    return this.httpClient.delete<Usuario>(this.API + '/' + Usuario.id);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}