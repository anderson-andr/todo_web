{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/project.service\";\nexport class ProjetoResolver {\n  constructor(service) {\n    this.service = service;\n  }\n  resolve(route, state) {\n    if (route.params && route.params['id']) {\n      return this.service.loadById(route.params['id']);\n    }\n    return of({\n      id: 0,\n      name: '',\n      description: '',\n      id_User: 0,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    });\n  }\n}\nProjetoResolver.ɵfac = function ProjetoResolver_Factory(t) {\n  return new (t || ProjetoResolver)(i0.ɵɵinject(i1.ProjectService));\n};\nProjetoResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProjetoResolver,\n  factory: ProjetoResolver.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAMA,SAAqBA,EAAE,QAAQ,MAAM;;;AAOrC,OAAM,MAAOC,eAAe;EAC1BC,YAAqBC,OAAuB;IAAvB,YAAO,GAAPA,OAAO;EAAmB;EAC/CC,OAAO,CAACC,KAA6B,EAAEC,KAA0B;IAC/D,IAAGD,KAAK,CAACE,MAAM,IAAIF,KAAK,CAACE,MAAM,CAAC,IAAI,CAAC,EAAE;MACrC,OAAO,IAAI,CAACJ,OAAO,CAACK,QAAQ,CAACH,KAAK,CAACE,MAAM,CAAC,IAAI,CAAC,CAAC;;IAGlD,OAAOP,EAAE,CAAC;MAAES,EAAE,EAAC,CAAC;MAAEC,IAAI,EAAC,EAAE;MAAEC,WAAW,EAAC,EAAE;MAACC,OAAO,EAAC,CAAC;MAACC,SAAS,EAAE,IAAIC,IAAI,EAAE;MAAEC,SAAS,EAAC,IAAID,IAAI;IAAE,CAAE,CAAC;EACpG;;AARWb,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAe,SAAff,eAAe;EAAAgB,YAFd;AAAM","names":["of","ProjetoResolver","constructor","service","resolve","route","state","params","loadById","id","name","description","id_User","createdAt","Date","updatedAt","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ander\\Documents\\Projetos\\TodoApp\\front-end\\src\\app\\project\\guards\\projeto.resolver.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Router, Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Project } from '../model/project';\nimport { ProjectService } from '../services/project.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjetoResolver implements Resolve<Project> {\n  constructor (private service: ProjectService) {}\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Project> {\n    if(route.params && route.params['id']) {\n      return this.service.loadById(route.params['id']);\n\n    }\n    return of({ id:0, name:'', description:'',id_User:0,createdAt: new Date(), updatedAt:new Date() });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}